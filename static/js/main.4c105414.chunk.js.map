{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","message","createMessage","goods","lastIndexOfComma","selectedGoodsMessage","selectedGoodsString","join","length","toString","concat","lastIndexOf","substring","updateSelectedGoods","goodsList","item","includes","push","this","className","type","onClick","setState","map","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8OAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAQWC,EAAb,4MACEC,MAAQ,CACNC,cAAe,CAAC,OAChBC,QAAS,mBAHb,EAMEC,cAAgB,SACdC,GAEA,IAEIC,EAFAC,EAAuB,oBACrBC,EAAsBH,EAAMI,KAAK,MAE/BC,EAAWL,EAAXK,OAER,OAAQA,GAAU,GAChB,KAAgB,IAAXA,EACH,OAAOH,EACT,KAAgB,IAAXG,EACHH,EAAuBF,EACpBM,WACAC,OAAO,gBACV,MACF,KAAgB,IAAXF,EACHH,EAAuBF,EACpBI,KAAK,SACLG,OAAO,iBACV,MACF,KAAKF,GAAU,EACbJ,EAAmBE,EAAoBK,YAAY,KAEnDN,EAAoB,UAAMC,EACvBM,UAAU,EAAGR,GADI,2BAEhBE,EACPM,UAAUR,EAAmB,GAHN,iBAIpB,MAEF,QACE,MAAO,oBAGX,OAAOC,GAxCX,EA2CEQ,oBAAsB,SAACC,EAAqBC,GAK1C,OAJKD,EAAUE,SAASD,IACtBD,EAAUG,KAAKF,GAGVD,GAhDX,4CAmDE,WAAU,IAAD,OACP,EAAmCI,KAAKnB,MAAhCC,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,QAEvB,OACE,sBAAKkB,UAAU,gBAAf,UACE,+BACGlB,EACA,KAED,wBACEkB,UAAU,kBACVC,KAAK,SACLC,QAAS,WACPrB,EAAcQ,OAAS,EACvB,EAAKc,SAAS,CACZrB,QAAS,EAAKC,cAAcF,MANlC,sBAaF,uBACA,uBACA,oBAAImB,UAAU,aAAd,SAEItB,EAAgB0B,KAAI,SAAAR,GAAI,OACtB,mCACE,wBAAOI,UAAU,2BAAjB,UACE,oBACEA,UAAU,kBADZ,SAIGJ,GAFIA,GAIP,wBACEI,UAAU,kBACVC,KAAK,SACLC,QAAS,WACP,EAAKC,SAAS,CACZtB,cAAe,EAAKa,oBAClBb,EAAee,KAGnB,EAAKO,SAAS,CACZrB,QAAS,EAAKC,cAAcF,MAVlC,SAcE,sBAAMmB,UAAU,sBAAhB,uCApGpB,GAAyBK,IAAMC,WClB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4c105414.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  selectedGoods: string[];\n  message: string;\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n    message: 'Jam is selected',\n  };\n\n  createMessage = (\n    goods: string[],\n  ) => {\n    let selectedGoodsMessage = 'No goods selected';\n    const selectedGoodsString = goods.join(', ');\n    let lastIndexOfComma: number;\n    const { length } = goods;\n\n    switch (length >= 0) {\n      case length === 0:\n        return selectedGoodsMessage;\n      case length === 1:\n        selectedGoodsMessage = goods\n          .toString()\n          .concat(' is selected');\n        break;\n      case length === 2:\n        selectedGoodsMessage = goods\n          .join(' and ')\n          .concat(' are selected');\n        break;\n      case length >= 3:\n        lastIndexOfComma = selectedGoodsString.lastIndexOf(',');\n\n        selectedGoodsMessage = `${selectedGoodsString\n          .substring(0, lastIndexOfComma)} and\n          ${selectedGoodsString\n    .substring(lastIndexOfComma + 1)} are selected`;\n        break;\n\n      default:\n        return 'No goods selected';\n    }\n\n    return selectedGoodsMessage;\n  };\n\n  updateSelectedGoods = (goodsList: string[], item: string) => {\n    if (!goodsList.includes(item)) {\n      goodsList.push(item);\n    }\n\n    return goodsList;\n  };\n\n  render() {\n    const { selectedGoods, message } = this.state;\n\n    return (\n      <div className=\"App container\">\n        <h1>\n          {message}\n          {'  '}\n\n          <button\n            className=\"btn btn-warning\"\n            type=\"button\"\n            onClick={() => {\n              selectedGoods.length = 0;\n              this.setState({\n                message: this.createMessage(selectedGoods),\n              });\n            }}\n          >\n            Clear\n          </button>\n        </h1>\n        <hr />\n        <br />\n        <ul className=\"list-group\">\n          {\n            goodsFromServer.map(item => (\n              <>\n                <label className=\"ListItem list-group-item\">\n                  <li\n                    className=\"list-group-item\"\n                    key={item}\n                  >\n                    {item}\n                  </li>\n                  <button\n                    className=\"btn btn-primary\"\n                    type=\"button\"\n                    onClick={() => {\n                      this.setState({\n                        selectedGoods: this.updateSelectedGoods(\n                          selectedGoods, item,\n                        ),\n                      });\n                      this.setState({\n                        message: this.createMessage(selectedGoods),\n                      });\n                    }}\n                  >\n                    <span className=\"badge badge-primary\">Select</span>\n                  </button>\n                </label>\n              </>\n            ))\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}