{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","message","isActive","isSelect","color","createMessage","goods","lastIndexOfComma","selectedGoodsMessage","selectedGoodsString","join","length","toString","concat","lastIndexOf","substring","updateSelectedGoods","goodsList","item","includes","splice","indexOf","push","this","showOrHideButton","className","type","onClick","setState","showSelectOrRemoveBtn","map","style","backgroundColor","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8OAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAaWC,EAAb,4MACEC,MAAQ,CACNC,cAAe,CAAC,OAChBC,QAAS,kBACTC,UAAU,EACVC,UAAU,EACVC,MAAO,SANX,EASEC,cAAgB,SACdC,GAEA,IAEIC,EAFAC,EAAuB,oBACrBC,EAAsBH,EAAMI,KAAK,MAE/BC,EAAWL,EAAXK,OAER,OAAQA,GAAU,GAChB,KAAgB,IAAXA,EAIH,OAHA,EAAKZ,MAAMG,UAAW,EACtB,EAAKH,MAAMK,MAAQ,QAEZI,EACT,KAAgB,IAAXG,EACHH,EAAuBF,EACpBM,WACAC,OAAO,gBACV,EAAKd,MAAMG,UAAW,EACtB,MACF,KAAgB,IAAXS,EACHH,EAAuBF,EACpBI,KAAK,SACLG,OAAO,iBACV,EAAKd,MAAMG,UAAW,EACtB,MACF,KAAKS,GAAU,EACbJ,EAAmBE,EAAoBK,YAAY,KAEnDN,EAAoB,UAAMC,EACvBM,UAAU,EAAGR,GADI,2BAEhBE,EACPM,UAAUR,EAAmB,GAHN,iBAIpB,EAAKR,MAAMG,UAAW,EACtB,MAEF,QACE,MAAO,oBAGX,OAAOM,GAjDX,EAoDEQ,oBAAsB,SAACC,EAAqBC,GAW1C,OAVKD,EAAUE,SAASD,IAKtBD,EAAUG,OAAOH,EAAUI,QAAQH,GAAO,GAC1C,EAAKnB,MAAMI,UAAW,EACtB,EAAKJ,MAAMK,MAAQ,UANnBa,EAAUK,KAAKJ,GACf,EAAKnB,MAAMI,UAAW,EACtB,EAAKJ,MAAMK,MAAQ,OAOda,GA/DX,4CAkEE,WAAU,IAAD,OACP,EAMIM,KAAKxB,MALPC,EADF,EACEA,cACAC,EAFF,EAEEA,QACAC,EAHF,EAGEA,SACAC,EAJF,EAIEA,SACAC,EALF,EAKEA,MAGIoB,EAAmBtB,EACrB,KAEA,wBACEuB,UAAU,kBACVC,KAAK,SACLC,QAAS,WACP3B,EAAcW,OAAS,EACvB,EAAKiB,SAAS,CACZ3B,QAAS,EAAKI,cAAcL,MANlC,mBAcE6B,EAAwB1B,EAC1B,SACA,SAEJ,OACE,sBAAKsB,UAAU,gBAAf,UACE,+BACGxB,EACA,KAEAuB,KAEH,uBACA,uBACA,oBAAIC,UAAU,aAAd,SAEI5B,EAAgBiC,KAAI,SAAAZ,GAAI,OACtB,wBACEO,UAAU,2BADZ,UAIE,oBACEA,UAAU,kBADZ,SAGGP,IAEH,wBACEO,UAAU,MACVC,KAAK,SACLK,MAAO,CAAEC,gBAAiB5B,GAC1BuB,QAAS,WACP,EAAKC,SAAS,CACZ5B,cAAe,EAAKgB,oBAClBhB,EAAekB,KAGnB,EAAKU,SAAS,CACZ3B,QAAS,EAAKI,cAAcL,MAXlC,SAeG6B,MAtBEX,eA/GrB,GAAyBe,IAAMC,WCvB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.85d28791.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport type ButtonColor = 'red' | 'green';\n\ninterface State {\n  selectedGoods: string[];\n  message: string;\n  isActive:boolean;\n  isSelect: boolean;\n  color: string;\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n    message: 'Jam is selected',\n    isActive: false,\n    isSelect: true,\n    color: 'green',\n  };\n\n  createMessage = (\n    goods: string[],\n  ) => {\n    let selectedGoodsMessage = 'No goods selected';\n    const selectedGoodsString = goods.join(', ');\n    let lastIndexOfComma: number;\n    const { length } = goods;\n\n    switch (length >= 0) {\n      case length === 0:\n        this.state.isActive = true;\n        this.state.color = 'green';\n\n        return selectedGoodsMessage;\n      case length === 1:\n        selectedGoodsMessage = goods\n          .toString()\n          .concat(' is selected');\n        this.state.isActive = false;\n        break;\n      case length === 2:\n        selectedGoodsMessage = goods\n          .join(' and ')\n          .concat(' are selected');\n        this.state.isActive = false;\n        break;\n      case length >= 3:\n        lastIndexOfComma = selectedGoodsString.lastIndexOf(',');\n\n        selectedGoodsMessage = `${selectedGoodsString\n          .substring(0, lastIndexOfComma)} and\n          ${selectedGoodsString\n    .substring(lastIndexOfComma + 1)} are selected`;\n        this.state.isActive = false;\n        break;\n\n      default:\n        return 'No goods selected';\n    }\n\n    return selectedGoodsMessage;\n  };\n\n  updateSelectedGoods = (goodsList: string[], item: string) => {\n    if (!goodsList.includes(item)) {\n      goodsList.push(item);\n      this.state.isSelect = false;\n      this.state.color = 'red';\n    } else {\n      goodsList.splice(goodsList.indexOf(item), 1);\n      this.state.isSelect = true;\n      this.state.color = 'green';\n    }\n\n    return goodsList;\n  };\n\n  render() {\n    const {\n      selectedGoods,\n      message,\n      isActive,\n      isSelect,\n      color,\n    } = this.state;\n\n    const showOrHideButton = isActive\n      ? null\n      : (\n        <button\n          className=\"btn btn-warning\"\n          type=\"button\"\n          onClick={() => {\n            selectedGoods.length = 0;\n            this.setState({\n              message: this.createMessage(selectedGoods),\n            });\n          }}\n        >\n          Clear\n        </button>\n      );\n\n    const showSelectOrRemoveBtn = isSelect\n      ? 'Select'\n      : 'Remove';\n\n    return (\n      <div className=\"App container\">\n        <h1>\n          {message}\n          {'  '}\n\n          {showOrHideButton}\n        </h1>\n        <hr />\n        <br />\n        <ul className=\"list-group\">\n          {\n            goodsFromServer.map(item => (\n              <label\n                className=\"ListItem list-group-item\"\n                key={item}\n              >\n                <li\n                  className=\"list-group-item\"\n                >\n                  {item}\n                </li>\n                <button\n                  className=\"btn\"\n                  type=\"button\"\n                  style={{ backgroundColor: color }}\n                  onClick={() => {\n                    this.setState({\n                      selectedGoods: this.updateSelectedGoods(\n                        selectedGoods, item,\n                      ),\n                    });\n                    this.setState({\n                      message: this.createMessage(selectedGoods),\n                    });\n                  }}\n                >\n                  {showSelectOrRemoveBtn}\n                </button>\n              </label>\n            ))\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}