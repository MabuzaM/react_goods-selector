{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","changeButtonColor","selectedGoods","goodItem","color","includes","changeListBackground","App","state","isActive","createMessage","goods","length","join","slice","addGood","item","setState","prevState","removeGood","filter","good","clear","hideClearButton","this","className","type","onClick","map","buttonText","style","backgroundColor","border","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAoB,SAACC,EAAyBC,GAClD,IAAIC,EAAQ,QAMZ,OAJIF,EAAcG,SAASF,KACzBC,EAAQ,OAGHA,GAGHE,EAAuB,SAACJ,EAAyBC,GACrD,IAAIC,EAAQ,UAMZ,OAJIF,EAAcG,SAASF,KACzBC,EAAQ,WAGHA,GAQIG,EAAb,4MACEC,MAAQ,CACNN,cAAe,CAAC,OAChBO,UAAU,GAHd,EAMEC,cAAgB,SACdC,GAEA,IAAQC,EAAWD,EAAXC,OAER,OAAQA,GACN,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAUD,EAAM,GAAhB,gBACF,KAAK,EACH,MAAM,GAAN,OAAUA,EAAME,KAAK,SAArB,iBACF,QACE,MAAM,GAAN,OAAUF,EAAMG,MAAM,GAAI,GAAGD,KAAK,MAAlC,gBACEF,EAAMC,EAAS,GADjB,mBAnBR,EAyBEG,QAAU,SAACC,GACT,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BhB,cAAc,GAAD,mBAAMgB,EAAUhB,eAAhB,CAA+Bc,QAG9C,EAAKR,MAAMC,UAAW,GA9B1B,EAiCEU,WAAa,SAACH,GACZ,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BhB,cAAegB,EAAUhB,cAAckB,QAAO,SAACC,GAAD,OAAUA,IAASL,UAnCvE,EAuCEM,MAAQ,WACN,EAAKL,SAAS,CAAEf,cAAe,KAC/B,EAAKM,MAAMC,UAAW,GAzC1B,EA4CEc,gBAAkB,WACZ,EAAKf,MAAMN,cAAcU,QAAU,IACrC,EAAKJ,MAAMC,UAAW,IA9C5B,4CAkDE,WAAU,IAAD,OACP,EAAoCe,KAAKhB,MAAjCN,EAAR,EAAQA,cAAeO,EAAvB,EAAuBA,SAEvB,OACE,sBAAKgB,UAAU,gBAAf,UACE,yCACMD,KAAKd,cAAcc,KAAKhB,MAAMN,eADpC,KAGIO,GAEI,wBACEgB,UAAU,kBACVC,KAAK,SACLC,QAAS,WACP,EAAKL,SAJT,sBAYR,uBACA,uBACA,oBAAIG,UAAU,aAAd,SAEIzB,EAAgB4B,KAAI,SAAAZ,GAClB,IAAMa,EAAa3B,EAAcG,SAASW,GACtC,SACA,SAWJ,OACE,wBACES,UAAU,2BADZ,UAIE,oBACEA,UAAU,kBACVK,MAAO,CACLC,gBAAiBzB,EACfJ,EAAec,IAJrB,SAQGA,IAEH,wBACES,UAAU,kBACVC,KAAK,SACLI,MAAO,CACLC,gBAAiB9B,EAAkBC,EAAec,GAClDgB,OAAQ,GAEVL,QAAS,WACP,EAAKJ,kBA9BPrB,EAAcG,SAASW,GACzB,EAAKG,WAAWH,GAEhB,EAAKD,QAAQC,GA6BT,EAAKN,cAAc,EAAKF,MAAMN,gBAVlC,SAaG2B,MAzBEb,eA7FvB,GAAyBiB,IAAMC,WCtC/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d67dd998.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst changeButtonColor = (selectedGoods: string[], goodItem: string) => {\n  let color = 'green';\n\n  if (selectedGoods.includes(goodItem)) {\n    color = 'red';\n  }\n\n  return color;\n};\n\nconst changeListBackground = (selectedGoods: string[], goodItem: string) => {\n  let color = '#9fff80';\n\n  if (selectedGoods.includes(goodItem)) {\n    color = '#ff8080';\n  }\n\n  return color;\n};\n\ninterface State {\n  selectedGoods: string[];\n  isActive:boolean;\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n    isActive: true,\n  };\n\n  createMessage = (\n    goods: string[],\n  ) => {\n    const { length } = goods;\n\n    switch (length) {\n      case 0:\n        return 'No goods selected';\n      case 1:\n        return `${goods[0]} is selected`;\n      case 2:\n        return `${goods.join(' and ')} are selected`;\n      default:\n        return `${goods.slice(0, -1).join(', ')} and ${\n          goods[length - 1]\n        } are selected`;\n    }\n  };\n\n  addGood = (item: string) => {\n    this.setState((prevState) => ({\n      selectedGoods: [...prevState.selectedGoods, item],\n    }));\n\n    this.state.isActive = true;\n  };\n\n  removeGood = (item: string) => {\n    this.setState((prevState) => ({\n      selectedGoods: prevState.selectedGoods.filter((good) => good !== item),\n    }));\n  };\n\n  clear = () => {\n    this.setState({ selectedGoods: [] });\n    this.state.isActive = false;\n  };\n\n  hideClearButton = () => {\n    if (this.state.selectedGoods.length <= 1) {\n      this.state.isActive = false;\n    }\n  };\n\n  render() {\n    const { selectedGoods, isActive } = this.state;\n\n    return (\n      <div className=\"App container\">\n        <h1>\n          {`${this.createMessage(this.state.selectedGoods)} `}\n          {\n            isActive\n              && (\n                <button\n                  className=\"btn btn-warning\"\n                  type=\"button\"\n                  onClick={() => {\n                    this.clear();\n                  }}\n                >\n                  Clear\n                </button>\n              )\n          }\n        </h1>\n        <hr />\n        <br />\n        <ul className=\"list-group\">\n          {\n            goodsFromServer.map(item => {\n              const buttonText = selectedGoods.includes(item)\n                ? 'Remove'\n                : 'Select';\n\n              const addOrRemoveItem = () => {\n                // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n                if (selectedGoods.includes(item)) {\n                  this.removeGood(item);\n                } else {\n                  this.addGood(item);\n                }\n              };\n\n              return (\n                <label\n                  className=\"ListItem list-group-item\"\n                  key={item}\n                >\n                  <li\n                    className=\"list-group-item\"\n                    style={{\n                      backgroundColor: changeListBackground(\n                        selectedGoods, item,\n                      ),\n                    }}\n                  >\n                    {item}\n                  </li>\n                  <button\n                    className=\"btn btn-success\"\n                    type=\"button\"\n                    style={{\n                      backgroundColor: changeButtonColor(selectedGoods, item),\n                      border: 0,\n                    }}\n                    onClick={() => {\n                      this.hideClearButton();\n                      addOrRemoveItem();\n                      this.createMessage(this.state.selectedGoods);\n                    }}\n                  >\n                    {buttonText}\n                  </button>\n                </label>\n              );\n            })\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}